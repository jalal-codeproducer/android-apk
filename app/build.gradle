plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'at.fhj.msd.androidgruppenarbeit'
    compileSdk 34

    defaultConfig {
        applicationId "at.fhj.msd.androidgruppenarbeit"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            storeFile file('keystore.jks') // Update to your keystore file name
            storePassword project.hasProperty('PW') ? project.storePassword : System.getenv('PW')
            keyAlias project.hasProperty('keyAlias') ? project.keyAlias : System.getenv('ALIAS')
            keyPassword project.hasProperty('keyPassword') ? project.keyPassword : System.getenv('PW')
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.2'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}
task decodeKeystore {
    doLast {
        def encodedKeystore = file('keystore.base64').text.trim()
        def decodedKeystore = file('keystore.jks').newOutputStream()
        decodedKeystore << encodedKeystore.decodeBase64()
        decodedKeystore.close()
    }
}

preBuild.dependsOn decodeKeystore
